//Store the gender
let genders = ["boy", "girl"];
//Store a list of boys names to choose from
let boysnames = [
    "Liam",
    "Noah",
    "Oliver",
    "William",
    "Elijah",
    "James",
    "Benjamin",
    "Lucas",
    "Mason",
    "Ethan",
    "Alexander",
    "Henry",
    "Jacob",
    "Michael",
    "Daniel",
    "Logan",
    "Jackson",
    "Sebastian",
    "Jack",
    "Aiden",
    "Owen",
    "Samuel",
    "Matthew",
    "Joseph",
    "Levi",
    "Mateo",
    "David",
    "John",
    "Wyatt",
    "Carter",
    "Julian",
    "Luke",
    "Grayson",
    "Isaac",
    "Jayden",
    "Theodore",
    "Gabriel",
    "Anthony",
    "Dylan",
    "Leo",
    "Lincoln",
    "Jaxon",
    "Asher",
    "Christopher",
    "Josiah",
    "Andrew",
    "Thomas",
    "Joshua",
    "Ezra",
    "Hudson",
    "Charles",
    "Caleb",
    "Isaiah",
    "Ryan",
    "Nathan",
    "Adrian",
    "Christian",
    "Maverick",
    "Colton",
    "Elias",
    "Aaron",
    "Eli",
    "Landon",
    "Jonathan",
    "Nolan",
    "Hunter",
    "Cameron",
    "Connor",
    "Santiago",
    "Jeremiah",
    "Ezekiel",
    "Angel",
    "Roman",
    "Easton",
    "Miles",
    "Robert",
    "Jameson",
    "Nicholas",
    "Greyson",
    "Cooper",
    "Ian",
    "Carson",
    "Axel",
    "Jaxson",
    "Dominic",
    "Leonardo",
    "Luca",
    "Austin",
    "Jordan",
    "Adam",
    "Xavier",
    "Jose",
    "Jace",
    "Everett",
    "Declan",
    "Evan",
    "Kayden",
    "Parker",
    "Wesley",
    "Kai"
];
//Store a list of girls names to choose from
let girlsnames = [
    "Olivia",
    "Emma",
    "Ava",
    "Sophia",
    "Isabella",
    "Charlotte",
    "Amelia",
    "Mia",
    "Harper",
    "Evelyn",
    "Abigail",
    "Emily",
    "Ella",
    "Elizabeth",
    "Camila",
    "Luna",
    "Sofia",
    "Avery",
    "Mila",
    "Aria",
    "Scarlett",
    "Penelope",
    "Layla",
    "Chloe",
    "Victoria",
    "Madison",
    "Eleanor",
    "Grace",
    "Nora",
    "Riley",
    "Zoey",
    "Hannah",
    "Hazel",
    "Lily",
    "Ellie",
    "Violet",
    "Lillian",
    "Zoe",
    "Stella",
    "Aurora",
    "Natalie",
    "Emilia",
    "Everly",
    "Leah",
    "Aubrey",
    "Willow",
    "Addison",
    "Lucy",
    "Audrey",
    "Bella",
    "Nova",
    "Brooklyn",
    "Paisley",
    "Savannah",
    "Claire",
    "Skylar",
    "Isla",
    "Genesis",
    "Naomi",
    "Elena",
    "Caroline",
    "Eliana",
    "Anna",
    "Maya",
    "Valentina",
    "Ruby",
    "Kennedy",
    "Ivy",
    "Ariana",
    "Aaliyah",
    "Cora",
    "Madelyn",
    "Alice",
    "Kinsley",
    "Hailey",
    "Gabriella",
    "Alllison",
    "Gianna",
    "Serenity",
    "Samantha",
    "Sarah",
    "Autumn",
    "Quinn",
    "Eva",
    "Piper",
    "Sophie",
    "Sadie",
    "Delilah",
    "Josephine",
    "Nevaeh",
    "Adeline",
    "Arya",
    "Emery",
    "Lydia",
    "Clara",
    "Vivian",
    "Madeline",
    "Peyton",
    "Julia",
    "Rylee"
];
//store a list of personality traits
let traits = [
    "happy",
    "intelligent",
    "conscientious",
    "kind",
    "cool",
    "popular",
    "stylish",
    "driven",
    "motivated",
    "disciplined",
    "funny",
    "interesting",
    "quirky",
    "serious",
    "sporty",
    "active",
    "admirable",
    "giving",
    "athletic",
    "balanced",
    "aspiring",
    "calm",
    "capable",
    "caring",
    "charismatic",
    "charming",
    "clean",
    "cheerful",
    "colourful",
    "compassionate",
    "confident",
    "considerate",
    "creative",
    "daring",
    "eloquent",
    "attractive",
    "enthusiastic",
    "extraordinary",
    "focused",
    "freethinking",
    "friendly",
    "generous",
    "genuine",
    "good-natured",
    "hardworking",
    "gracious",
    "heroic",
    "honest",
    "honourable",
    "imaginative",
    "innovative",
    "insightful",
    "loyal",
    "mature",
    "modest",
    "open",
    "optimistic",
    "passionate",
    "patient",
    "playful",
    "relaxed",
    "responsible",
    "romantic",
    "self-reliant",
    "self-sufficient",
    "skillful",
    "sophisticated",
    "studious",
    "sweet",
    "tasteful",
    "tidy",
    "winning",
    "a natural leader"
];
//store a list of potential jobs to choose from
let joblist = [
    "an accountant",
    "a programmer",
    "the President",
    "the Primeminister",
    "a comedian",
    "a singer",
    "an actor",
    "an artist",
    "a youtuber",
    "a tiktokker",
    "a scientist",
    "a mechanic",
    "an engineer",
    "a painter",
    "an athlete",
    "a charity worker",
    "an investor",
    "a lawyer",
    "a solicitor",
    "a real estate investor",
    "an inventor",
    "a software engineer",
    "an entrepeneur",
    "an author",
    "an animator",
    "a designer",
    "a model",
    "a consultant",
    "a doctor",
    "a judge",
    "a musician",
    "a teacher",
    "a public speaker",
    "a politician",
    "a journalist",
    "a stock broker",
    "royalty",
    "a police officer",
    "a military general",
    "a diplomat",
    "an ambassador",
    "a manga author",
    "an Olympian",
    "a chef",
    "a CEO",
    "a historian",
    "an archeologist",
    "an architect",
    "a pilot",
    "an astronaut",
    "an astrophysicist",
    "a chemist",
    "a biochemist",
    "a dentist",
    "a vet",
    "a secret agent",
    "a conservation scientist",
    "a copywriter",
    "a dancer",
    "a data scientist",
    "an economist",
    "a professor",
    "an electrical engineer",
    "a film director",
    "a financial analyst",
    "a film producer",
    "a music producer",
    "a pro gamer" 
];
//initializes random gender
let gender = genders[Math.floor(Math.random()*2)];
let babyname;
let partnername
//initializes random name and partner name based on gender
if (gender === "boy") {
    babyname = boysnames[Math.floor(Math.random()*100)];
    partnername = girlsnames[Math.floor(Math.random()*100)];
} else {
    babyname = girlsnames[Math.floor(Math.random()*100)];
    partnername = boysnames[Math.floor(Math.random()*100)];
}
//initializes random traits
let chosentrait = []
while (chosentrait.length <= 5) {
    let temptrait = traits[Math.floor(Math.random()*73)]
    if (chosentrait.includes(temptrait)) {
        continue
    } else {
        chosentrait.push(temptrait);
    }
}
//initializes random work
let occupation = joblist[Math.floor(Math.random()*68)];
//initializes random number of kids
let numkids = Math.floor(Math.random()*5);
//initializes random marriage age
let marriageage = Math.floor(Math.random()*11) + 20;
//output the desired message
console.log(`If you have a ${gender} named ${babyname} they will be ${chosentrait[0]}, ${chosentrait[1]}, ${chosentrait[2]}, ${chosentrait[3]} and ${chosentrait[4]}.\nThey will grow up to become ${occupation}.\nThey will have ${numkids} children.\nThey will marry someone named ${partnername} at age ${marriageage}`);
